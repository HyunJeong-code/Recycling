<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="recycling.buyer.dao.face.MypageDao">

	<select id="selectQnaBybCode" parameterType="recycling.util.PagingAndCtg" resultType="hashmap">
		SELECT rownum no, QST.* FROM (
			SELECT * FROM (
		        SELECT 
		       		'OTO' ctg, O.b_code bcode, O.oto_code code, O.ct_otono ctno, O.oto_title title, O.oto_content content, O.oto_name name, O.oto_date entdate, O.oto_hit hit, 
		            NVL(A.ans_code, '-') ans
		        FROM oto O, ans A
		        <where>
			        AND O.oto_code = A.oto_code(+)
		        </where>
			    UNION ALL
		        SELECT 
		            'QST' ctg, Q.b_code bcode, Q.qst_code code, Q.ct_qstno ctno, Q.qst_title title, Q.qst_content content, Q.qst_name name, Q.qst_date entdate, Q.qst_hit hit, 
		            NVL(A.qna_code, '-') ans
		        FROM qst Q, qna A
		        <where>
			        AND Q.qst_code = A.qst_code(+)
		        </where>
			)
			<where>
				AND bcode = #{user }
				OR title LIKE '%' || #{search } || '%'
				OR content LIKE '%' || #{search } || '%'
			</where>
			ORDER BY entdate
			) QST
	</select>
	
	<select id="selectRvwBybCode" parameterType="recycling.util.PagingAndCtg" resultType="hashmap">
		SELECT * FROM (
		    SELECT '체험단' ctg, rvw_code code, b_code bcode, exp_code rvw, rvw_grade grade, rvw_content content, rvw_date entdate FROM exp_review
		    UNION ALL
		    SELECT '새활용' ctg, upcy_code code, b_code bcode, prd_code rvw, upcy_grade grade, upcy_content content, upcy_date entdate FROM upcy_review
		)
		<where>
			AND bcode = #{user }
		</where>
		ORDER BY entdate
	</select>
	
	<select id="selectCntPage" parameterType="recycling.util.PagingAndCtg" resultType="int">
		SELECT count(*) FROM (
		    SELECT * FROM (
		        SELECT 
		            'OTO' ctg, O.b_code bcode, O.oto_code code, O.ct_otono ctno, O.oto_title title, O.oto_content content, O.oto_name name, O.oto_date entdate, O.oto_hit hit, 
		            NVL(A.ans_code, '-') ans
		        FROM oto O, ans A
		        <where>
			        AND O.oto_code = A.oto_code(+)
		        </where>
		    )
		    UNION ALL
		    SELECT * FROM (
		        SELECT 
		            'QST' ctg, Q.b_code bcode, Q.qst_code code, Q.ct_qstno ctno, Q.qst_title title, Q.qst_content content, Q.qst_name name, Q.qst_date entdate, Q.qst_hit hit, 
		            NVL(A.qna_code, '-') ans
		        FROM qst Q, qna A
		        <where>
			        AND Q.qst_code = A.qst_code(+)
		        </where>
		    )
		)
		<where>
			AND bcode = #{user }
			OR title LIKE '%' || #{search } || '%'
			OR content LIKE '%' || #{search } || '%'
		</where>
		ORDER BY entdate
	</select>
</mapper>