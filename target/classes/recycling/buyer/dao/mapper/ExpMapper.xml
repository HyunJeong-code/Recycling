<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="recycling.buyer.dao.face.ExpDao">

	<sql id="selectExp">
	SELECT * FROM Exp
	</sql>
	
	<select id="selectAllExp" parameterType="recycling.util.Paging" resultType="Exp">
		SELECT * FROM (
			SELECT rownum rnum, E.* FROM (
				<include refid="selectExp"/>
				<where>
					AND exp_name LIKE '%' || #{search } || '%' 
						OR exp_code LIKE '%' || #{search } || '%' 
				</where>
				ORDER BY exp_code
			) E
		)
		<where>
			AND rnum BETWEEN #{startNo} AND #{endNo}
		</where>
	</select>
	
	<select id="selectCntAll" parameterType="string" resultType="int">
		SELECT count(*) FROM Exp
		<where>
			AND exp_name LIKE '%' || #{key } || '%' 
				OR exp_code LIKE '%' || #{search } || '%'
		</where>
		ORDER BY exp_date DESC
	</select>
	
<!-- 	최신 체험단 조회 -->
	<select id="selectRecentExp" parameterType="recycling.util.Paging" resultType="exp">
        SELECT * FROM (
            SELECT rownum rnum, E.* FROM (
                <include refid="selectExp"/>
                <where>
                    AND exp_name LIKE '%' || #{search} || '%' 
                        OR exp_code LIKE '%' || #{search} || '%' 
                </where>
                ORDER BY exp_date DESC
            ) E
        )
        <where>
            AND rnum BETWEEN #{startNo} AND #{endNo}
        </where>
    </select>

    <!-- 인기 체험단 조회 -->
    <select id="selectPopularExp" parameterType="recycling.util.Paging" resultType="exp">
        SELECT * FROM (
            SELECT rownum rnum, E.* FROM (
                <include refid="selectExp"/>
                <where>
                    AND exp_name LIKE '%' || #{search} || '%' 
                        OR exp_code LIKE '%' || #{search} || '%' 
                </where>
                ORDER BY exp_hit DESC
            ) E
        )
        <where>
            AND rnum BETWEEN #{startNo} AND #{endNo}
        </where>
    </select>

    <!-- 상단 인기 체험 조회 -->
    <select id="selectTopPopExp" resultType="exp">
    	SELECT * FROM (
            SELECT rownum rnum, E.* FROM (
                <include refid="selectExp"/>
                ORDER BY exp_hit DESC
            ) E
        )
        WHERE rnum BETWEEN 1 AND 5
    </select>
    
    <!-- 상단 새체험 조회 -->
    <select id="selectTopRecExp" resultType="exp">
    	SELECT * FROM (
            SELECT rownum rnum, E.* FROM (
                <include refid="selectExp"/>
                ORDER BY exp_date DESC
            ) E
        )
        WHERE rnum BETWEEN 1 AND 5
    </select>
    
    <select id="selectByExpCode" resultType="Exp" parameterType="string">
    	SELECT * FROM Exp
    	<where>
    		AND exp_code = #{expCode}
    	</where>
    </select>
    
    <select id="selectByExpFile" resultType="ExpFile" parameterType="string">
    	SELECT * FROM exp_file
    	<where>
    		AND exp_code = #{expCode}
    	</where>
    </select>
	
	<select id="getSellerInfo" resultType="Seller" parameterType="string">
		SELECT * FROM Seller
		<where>
			AND s_code = #{sCode}
		</where>
	
	</select>
	
	<select id="getBuyerInfo" resultType="Buyer" parameterType="string">
		SELECT b.* FROM Buyer b 
			JOIN Seller s ON s.b_code = b.b_code
		<where>
			AND b.b_code = #{bCode}
		</where>
	
	</select>
	
	<update id="updateExpHit" parameterType="string">
		UPDATE Exp
			SET exp_hit = exp_hit + 1
		<where>
			AND exp_code = #{expCode }
		</where>
	</update>
	
	<select id="getBuyerDetail" parameterType="string" resultType="recycling.dto.buyer.Buyer">
		SELECT B_Code AS bCode,
		       B_Ct_Code AS bCtCode,
		       B_Id AS bId,
		       B_Pw AS bPw,
		       B_Name AS bName,
		       B_Phone AS bPhone,
		       B_Email AS bEmail,
		       Ad_Sms AS adSms,
		       Ad_Email AS adEmail
		FROM Buyer
		<where>
			AND B_Id = #{bId }
		</where>
	</select>
	
	<select id="getExpSchList" resultType="ExpSch" parameterType="string">
		SELECT * FROM exp_sch
		<where>
			AND exp_code = #{expCode}
		</where>
	</select>
	
	<select id="getExpSch" resultType="ExpSch" parameterType="int">
		SELECT * from exp_sch
		<where>
			AND sch_no = #{schNo}
		</where>
	</select>
	
	<insert id="insertExpRes" parameterType="ExpRes" useGeneratedKeys="true" keyProperty="resCode" keyColumn="res_code">
		INSERT INTO exp_res (
			res_code, 
			b_code, 
			sch_no, 
			res_name, 
			res_phone, 
			res_email, 
			res_expname, 
			res_date, 
			res_time, 
			res_cnt, 
			res_price, 
			res_sum, 
			res_pay, 
			pay_date,
			res_cnf,
			res_cnl,
			res_dt 
			) VALUES (
    		'RES' || lpad(exp_res_seq.nextval, 7, '0'), 
    		#{bCode}, 
    		#{schNo}, 
    		#{resName}, 
    		#{resPhone}, 
    		#{resEmail}, 
    		#{resExpName}, 
    		TO_DATE(#{resDate},'YYYY-MM-DD HH24:MI:SS'),
    		#{resTime}, 
    		#{resCnt}, 
    		#{resPrice}, 
    		#{resSum}, 
    		#{resPay}, 
    		SYSDATE, 
    		#{resCnf}, 
    		#{resCnl}, 
    		#{resDt}
    		)
	</insert>
	

	<update id="updateExpSchCnt" parameterType="map">
	    UPDATE exp_sch
	    SET sch_cnt = sch_cnt - #{resCnt}
	    WHERE sch_no = #{schNo}
	</update>
	
	<select id="selectByResCode" resultType="ExpRes" parameterType="string">
		SELECT * FROM exp_res
		<where>
			AND res_code = #{resCode}
		</where>
	</select>
	
	<select id="selectRvwByExp" resultType="map" parameterType="string">
		SELECT er.rvw_code, er.b_code, er.exp_code, er.rvw_grade, er.rvw_content, er.rvw_date, b.b_id AS buyerId
        FROM exp_review er
        JOIN buyer b ON er.b_code = b.b_code
        WHERE er.exp_code = #{expCode}
	</select>
	
	<select id="selectByBuyerChk" resultType="ExpRes" parameterType="map">
		SELECT * FROM exp_res
        WHERE b_code = #{bCode}
        AND sch_no IN (
            SELECT sch_no FROM exp_sch WHERE exp_code = #{expCode}
        )
        AND res_date &lt; SYSDATE
	</select>
	
	<insert id="insertExpReview" parameterType="ExpReview">
        INSERT INTO exp_review (
            rvw_code, b_code, exp_code, rvw_grade, rvw_content, rvw_date
        ) VALUES (
            'RVW' || lpad(exp_rvw_seq.nextval, 7, '0'), #{bCode}, #{expCode}, #{rvwGrade}, #{rvwContent}, SYSDATE
        )
    </insert>
    
    <select id="getBuyerProf" resultType="BuyerProf" parameterType="string">
    	SELECT * FROM buyer_prof
    	<where>
    		AND b_code = #{bCode}
    	</where>
    </select>

</mapper>