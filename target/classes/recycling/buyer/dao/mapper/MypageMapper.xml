<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="recycling.buyer.dao.face.MypageDao">

	<select id="selectQnaBybCode" parameterType="recycling.util.PagingAndCtg" resultType="hashmap">
		SELECT * FROM (
			SELECT rownum no, QST.* FROM (
				SELECT * FROM (
			        SELECT 
			       		'OTO' ctg, O.b_code bcode, O.oto_code code, O.ct_otono ctno, O.oto_title title, O.oto_content content, O.oto_name name, O.oto_date entdate, O.oto_hit hit, 
			            NVL(A.ans_code, '-') ans
			        FROM oto O, ans A
			        <where>
				        AND O.oto_code = A.oto_code(+)
			        </where>
				    UNION ALL
			        SELECT 
			            'QST' ctg, Q.b_code bcode, Q.qst_code code, Q.ct_qstno ctno, Q.qst_title title, Q.qst_content content, Q.qst_name name, Q.qst_date entdate, Q.qst_hit hit, 
			            NVL(A.qna_code, '-') ans
			        FROM qst Q, qna A
			        <where>
				        AND Q.qst_code = A.qst_code(+)
			        </where>
				)
				<where>
					AND bcode = #{user }
					AND (
						title LIKE '%' || #{search } || '%'
						OR content LIKE '%' || #{search } || '%'
					)
				</where>
				ORDER BY entdate
				) QST
		)
		<where>
			AND no BETWEEN #{startNo } AND #{endNo }
		</where>
	</select>
	
	<select id="selectRvwBybCode" parameterType="recycling.util.PagingAndCtg" resultType="hashmap">
		SELECT * FROM (
			SELECT rownum no, RVW.*  FROM (
				SELECT * FROM (
				    SELECT '체험단' ctg, rvw_code code, b_code bcode, exp_code rvw, rvw_grade grade, rvw_content content, rvw_date entdate FROM exp_review
				    UNION ALL
				    SELECT '새활용' ctg, upcy_code code, b_code bcode, prd_code rvw, upcy_grade grade, upcy_content content, upcy_date entdate FROM upcy_review
				)
				<where>
					AND bcode = #{user }
					AND content LIKE '%' || #{search } || '%'
				</where>
				ORDER BY entdate
			) RVW
		)
		<where>
			AND no BETWEEN #{startNo } AND #{endNo } 
		</where>
	</select>
	
	<select id="selectCntQna" parameterType="recycling.util.PagingAndCtg" resultType="int">
		SELECT count(*) FROM (
		    SELECT * FROM (
		        SELECT 
		            'OTO' ctg, O.b_code bcode, O.oto_code code, O.ct_otono ctno, O.oto_title title, O.oto_content content, O.oto_name name, O.oto_date entdate, O.oto_hit hit, 
		            NVL(A.ans_code, '-') ans
		        FROM oto O, ans A
		        <where>
			        AND O.oto_code = A.oto_code(+)
		        </where>
		    )
		    UNION ALL
		    SELECT * FROM (
		        SELECT 
		            'QST' ctg, Q.b_code bcode, Q.qst_code code, Q.ct_qstno ctno, Q.qst_title title, Q.qst_content content, Q.qst_name name, Q.qst_date entdate, Q.qst_hit hit, 
		            NVL(A.qna_code, '-') ans
		        FROM qst Q, qna A
		        <where>
			        AND Q.qst_code = A.qst_code(+)
		        </where>
		    )
		)
		<where>
			AND bcode = #{user }
			AND (
				title LIKE '%' || #{search } || '%'
				OR content LIKE '%' || #{search } || '%'
			)
		</where>
		ORDER BY entdate
	</select>
	
	<select id="selectCntRvw" parameterType="recycling.util.PagingAndCtg" resultType="int">
		SELECT count(*) FROM (
			SELECT * FROM (
			    SELECT '체험단' ctg, rvw_code code, b_code bcode, exp_code rvw, rvw_grade grade, rvw_content content, rvw_date entdate FROM exp_review
			    UNION ALL
			    SELECT '새활용' ctg, upcy_code code, b_code bcode, prd_code rvw, upcy_grade grade, upcy_content content, upcy_date entdate FROM upcy_review
			)
		)
		<where>
			AND bcode = #{user }
			AND content LIKE '%' || #{search } || '%'
		</where>
		ORDER BY entdate
	</select>
	
	<!-- 1:1 문의 상세 조회 -->
	<select id="getOtoDetail" parameterType='string' resultType="recycling.dto.buyer.Oto">
		SELECT * FROM Oto
		WHERE Oto_Code = #{otoCode }
	</select>
	
	<!-- 1:1 문의 첨부 파일 리스트 조회 -->
	<select id="getOtoFile" parameterType="string" resultType="recycling.dto.buyer.OtoFile">
		SELECT * FROM Oto_File
		WHERE Oto_Code = #{otoCode }
	</select>
	
	<!-- 1:1 문의 작성 -->
	<insert id="insertOto" parameterType="recycling.dto.buyer.Oto">
		INERT INTO Oto (
			Oto_Code, Ct_OtoNo, B_Code, Oto_Title, Oto_Content, Oto_Name, Oto_Email, Oto_Date, Oto_Hit
		) VALUES (
			#{otoCode }, #{ctOtoNo }, #{bCode }, #{otoTitle }, #{otoContent }, #{otoName }, #{otoEmail }, SYSDATE, 0
		)
	</insert>
	
	<!-- 1:1 문의 첨부 파일 작성 -->
	<insert id="insertOtoFile" parameterType="recycling.dto.buyer.OtoFile">
		INSERT INTO Oto_File (
			Oto_FlNo, Oto_Code, Origin_Name, Stored_Name
		) VALUES (
			Oto_File_seq.nextval, #{otoCode }, #{originName }, #{storedName }
		)
	</insert>
	
	<!-- 1:1 문의 삭제 -->
	<delete id="deleteOto" parameterType="string">
		DELETE FROM Oto
		WHERE Oto_Code = #{otoCode }
	</delete>
	
	<!-- 1:1 문의 첨부 파일 삭제 -->
	<delete id="deleteOtoFile" parameterType="string">
		DELETE FROM Oto_File
		WHERE Oto_Code = #{otoCode }
	</delete>
</mapper>